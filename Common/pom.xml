<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>bigdata-all</artifactId>
        <groupId>com.conan.bigdata</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>common</artifactId>
    <name>common</name>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <impala.jdbc.version>2.5.41</impala.jdbc.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.3-1102.jdbc41</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <!--
                <dependency>
                    <groupId>com.cloudera.impala.jdbc</groupId>
                    <artifactId>hive-metastore</artifactId>
                    <version>${impala.jdbc.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.cloudera.impala.jdbc</groupId>
                    <artifactId>hive-service</artifactId>
                    <version>${impala.jdbc.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.cloudera.impala.jdbc</groupId>
                    <artifactId>ImpalaJDBC41</artifactId>
                    <version>${impala.jdbc.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.cloudera.impala.jdbc</groupId>
                    <artifactId>ql</artifactId>
                    <version>${impala.jdbc.version}</version>
                </dependency>

                <dependency>
                    <groupId>com.cloudera.impala.jdbc</groupId>
                    <artifactId>TCLIServiceClient</artifactId>
                    <version>${impala.jdbc.version}</version>
                </dependency>
        -->
        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libfb303</artifactId>
            <version>0.9.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
            <version>0.9.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- impala jdbc end -->

        <dependency>
            <groupId>org.roaringbitmap</groupId>
            <artifactId>RoaringBitmap</artifactId>
        </dependency>

        <!-- 生成二维码 -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.4.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>3.4.0</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!--
                java -[classpath|cp] $CLASSPATH:commons-lang3-3.4.jar:common-1.0-SNAPSHOT.jar com.conan.bigdata.common.util.ComputerEnvironment
                执行该ComputerEnvironment类时， 需要引入commons-lang3-3.4.jar包， 通过这种方式引入
                这是后，配置的主类就不起效果了， 项目的jar包以普通jar的形式添加的classpath中即可
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.conan.bigdata.common.util.Tools</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- 可能会找不到jar包，打包依赖，执行jar包的命令：  java -Djava.ext.dirs=./lib -jar hive-1.0-SNAPSHOT.jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>


        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 是否使用变量值替换properties文件中的占位符el表达式 -->
                <!-- <filtering>true</filtering> -->
                <excludes>
                    <exclude>dev/*</exclude>
                    <exclude>prod/*</exclude>
                </excludes>
            </resource>
            <!-- 注意，要想配置文件打包在classpath的跟路径下，必须这么写 -->
            <resource>
                <directory>src/main/resources/${prop.env}</directory>
            </resource>
        </resources>

    </build>


    <!-- 这里可以默认，也可以编译的时候传参数 mvn clean package -P ${prop.env} -DskipTests=true -->
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <prop.env>dev</prop.env>
            </properties>
            <!-- 开发环境，默认激活 -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <prop.env>test</prop.env>
            </properties>
        </profile>

        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <prop.env>prod</prop.env>
            </properties>
        </profile>
    </profiles>
</project>
